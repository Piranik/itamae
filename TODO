Standards:
  1) Should we add support for AVS, Prism headers?
  2) radiotap: ensure data pad is handled for atheros cards (any others?)
  3) mpdu, fully parse
     o control wrapper
     o +htc
     o info-elements
      - RSN Std 8.4.2.27, #48
      - TIM Info-Element #5 from beacons could be useful
      - parse timing advance
     o support a-msdu etc
  6) 802.1X parsing?
  7) other 802.11 standards i.e mesh
  8) do we extend for 802.2 LLC and layer 3 IP parsing?
  9) default MPDU() does not create err field
 10) allow for invalid values in MPDU (could help identify fuzzing attempts)
 11) avoid passing strings everywhere. could we use a buffer?
 12) consider allowing for building of packets
 13) I cannot remember why I use '@' format byte order specifier in radiotap and
  '=' in mpdu
 14) use the following in radio tap example to show one with flags (fcs is set)
 '\x00\x00\x12\x00.H\x00\x00\x100l\t\xc0\x00\xbe\x03\x00\x00\xb4\x00\x80\x00\xac\xb5}\x8d;0<F\xd8~\x0e\xdd\xc2U0\xde'
 15) expose certain fields like flags,channel,rx-flags and rate that should
  alwasy be present in a parsed radiotap. Note: for rate would have to determine
  if rate is present or if it is defined in mcs fields. Also, should we then
  make rtap.rate Mbps?
 16) add functions to rtap to avoid having to manually parse additional i.e
  channels, flags, rx-flags etc
  o will have to add error handling if field is not present